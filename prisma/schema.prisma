generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model doctor {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @db.VarChar(255)
  user_id      String?        @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user         user?          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prescription prescription[]
}

model marketing_manager {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patient {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  image        String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prescription prescription[]
}

model pharmacist {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(255)
  user_id        String?          @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  user           user?            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pharmacy_order pharmacy_order[]
}

model pharmacy_order {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prescription_id String?       @db.Uuid
  pharmacist_id   String?       @db.Uuid
  status          String        @db.VarChar(255)
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  pharmacist      pharmacist?   @relation(fields: [pharmacist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prescription    prescription? @relation(fields: [prescription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model prescription {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  patient_id     String?          @db.Uuid
  doctor_id      String?          @db.Uuid
  status         String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  pharmacy_order pharmacy_order[]
  doctor         doctor?          @relation(fields: [doctor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  patient        patient?         @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String              @unique @db.VarChar(255)
  firstName         String?             @db.VarChar(255)
  lastName          String?             @db.VarChar(255)
  roq_user_id       String              @db.VarChar(255)
  tenant_id         String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  doctor            doctor[]
  marketing_manager marketing_manager[]
  patient           patient[]
  pharmacist        pharmacist[]
}
